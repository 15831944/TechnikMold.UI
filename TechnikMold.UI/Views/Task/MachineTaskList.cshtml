@using MoldManager.WebUI.Models.Helpers;
@{
    TaskTypeModelHelper _taskType = new TaskTypeModelHelper();
    int type = Convert.ToInt32(ViewBag.TaskType);
    int CkDeptID = 0, CkPosID = 0;
    string CkDepName = string.Empty;
    Dictionary<int,string> taskStatus =new Dictionary<int, string>();
    taskStatus.Add(0, "当前任务");
    taskStatus.Add(1, "历史任务");
    try
    {
        CkDeptID = Convert.ToInt32(Request.Cookies["User"]["Department"]);
        CkDepName = HttpUtility.UrlDecode(Request.Cookies["User"]["DepartmentName"]);
    }
    catch
    {

    }
    try
    {
        CkPosID = Convert.ToInt32(Request.Cookies["User"]["Position"]);
    }
    catch
    {

    }
    //加工部门ID集合 —— 5: MG;6: NC;7: CNC;8: EDM;9: WEDM
    List<int> _wsDep = (List<int>)ViewBag.wsDepID;
}
<style>
    .EleInfoDiv {
        position: absolute;
        margin-left:10px;
        right: 10px;
        top: 40px;
        bottom: 10px;
        width: 360px;
        border: 1px solid rgba(0,0,0,0.1);
        border-style: solid solid solid solid;
    }
    td{
        font-family:"微软雅黑"!important;
    }
    .tbHeader td{
        margin-bottom: 0;
        table-layout: fixed;
        border-top: none;
        background-color: rgba(0,0,0,0.8);
        border: 1px solid white!important;
        color: rgba(255,255,255,1)!important;
        font-size: 14px;
        height: 36.53px;
        font-weight:bold;
    }
    .EleInfoTB td{
        text-align:center;
        vertical-align:central;
        border: 1px solid rgba(0,0,0,0.1);
    }
    .EleObjTB_Header td{
        text-indent:13px;/*28*/
    }
    .EleObjTB_Body td{
        text-indent:13px;
        font-size:12px;
    }
    .EleInfoTB_Body_1 td{
        /*background-color:yellow;*/
        font-size:11px;
    }
    .EleInfoTB_Body td{
        font-size:11px;
    }
</style>

<script src="~/Scripts/Task.js"></script>
<script src="~/Scripts/jquery.contextmenu.r2.packed.js"></script>
<input type="hidden" id="CurrentTaskType" value="@ViewBag.TaskType" />

@if (ViewBag.State == 0)
    {
        <h2 style="margin-top:60px;">@(ViewBag.Title)当前状态</h2>
    }
    else
    {
        <h2 style="margin-top:60px;">@(ViewBag.Title)历史状态</h2>
    }
<div class="FatherDiv">
    <div class="LeftDiv">
        <button class="btn btn-primary LeftDiv_Btn" id="RefreshMold">刷新模号列表</button>
        <input type="text" id="Keyword" class="form-control LeftDiv_Inpt" placeholder="模具号关键字" />
        <input type="hidden" id="FMoldNumber" />
        <input type="hidden" id="FTaskType" value="@ViewBag.TaskType" />
        <input type="hidden" id="FState" value="@ViewBag.State" />
        <input type="hidden" id="FCAM" value="0" />
        <select class="form-control LeftDiv_Sel" id="MoldSelect" size="3"></select>
    </div>
    <div class="RightDiv">
        <div id="Toolbar" class="RightDiv_TopDiv">
            <table>
                <tr>
                    <td>
                        <select id="sel_TaskType" class="form-control">
                            @for (int i = 1; i <= 6; i++)
                            {
                                if (i != 5)
                                {
                                    if (ViewBag.TaskType == i)
                                    {
                                        <option value="@i" selected>@_taskType.GetTypeName(i)</option>
                                    }
                                    else
                                    {
                                        <option value="@i">@_taskType.GetTypeName(i)</option>
                                    }
                                }
                            }
                        </select>
                    </td>
                    <td>
                        <select id="sel_TaskStatus" class="form-control">
                            @foreach (var t in taskStatus)
                            {
                                if (t.Key == ViewBag.State)
                                {
                                    <option value="@t.Key" selected>@t.Value</option>
                                }
                                else
                                {
                                    <option value="@t.Key">@t.Value</option>
                                }
                            }
                        </select>
                    </td>
                    @if (ViewBag.State == 0)
                    {
                        if (_wsDep.Contains(CkDeptID))
                        {
                            switch (type)
                            {
                                case 1://电极任务
                                    if (CkDepName.Equals("CNC"))
                                    {
                                        <td>
                                            <select class="form-control" id="Sel_priority">
                                                <option value="0">-</option>
                                                <option value="1">1</option>
                                                <option value="2">2</option>
                                                <option value="3">3</option>
                                                <option value="4">4</option>
                                                <option value="5">5</option>
                                            </select>
                                        </td>
                                        <td><button class="btn btn-info" id="CNCItemList"><span class="glyphicon glyphicon-hand-right"></span> 电极信息</button></td>
                                        <td class="sinno" hidden><button class="btn btn-primary" id="AddToQueue"><span class="glyphicon glyphicon-barcode"></span> 电极加工</button></td>
                                        <td><button class="btn btn-warning" id="PointCheck"><span class="glyphicon glyphicon-user"></span> 任务点检</button></td>
                                        <td><button class="btn btn-danger" id="FinishTask"><span class="glyphicon glyphicon-lock"></span> 结束加工</button></td>
                                        <td class="sinno" hidden><button class="btn btn-primary" id="OutSource1"><span class="glyphicon glyphicon-ok-circle"></span> 任务外发</button></td>
                                        <td class="sinno" hidden><button class="btn btn-warning" id="CancelOutSource"><span class="glyphicon glyphicon-ban-circle"></span> 取消外发</button></td>
                                    }
                                    break;
                                case 2://EDM任务
                                    if (CkDepName.Equals("EDM"))
                                    {
                                        <td>
                                            <select class="form-control" id="Sel_priority">
                                                <option value="0">-</option>
                                                <option value="1">1</option>
                                                <option value="2">2</option>
                                                <option value="3">3</option>
                                                <option value="4">4</option>
                                                <option value="5">5</option>
                                            </select>
                                        </td>
                                        <td><button class="btn btn-warning" id="EleQCResult"><span class="glyphicon glyphicon-check"></span> 确认电极</button></td>
                                        <td class="sinno" hidden><button class="btn btn-primary" id="EDMProcessList"><span class="glyphicon glyphicon-edit"></span> 加工任务</button></td>
                                        <td><button class="btn btn-danger" id="FinishTask"><span class="glyphicon glyphicon-lock"></span> 结束加工</button></td>
                                        <td class="sinno" hidden><button class="btn btn-primary" id="OutSource1"><span class="glyphicon glyphicon-ok-circle"></span> 任务外发</button></td>
                                        <td class="sinno" hidden><button class="btn btn-warning" id="CancelOutSource"><span class="glyphicon glyphicon-ban-circle"></span> 取消外发</button></td>
                                    }
                                    break;
                                case 3:
                                    if (CkDepName.Equals("WEDM"))
                                    {
                                        <td>
                                            <select class="form-control" id="Sel_priority">
                                                <option value="0">-</option>
                                                <option value="1">1</option>
                                                <option value="2">2</option>
                                                <option value="3">3</option>
                                                <option value="4">4</option>
                                                <option value="5">5</option>
                                            </select>
                                        </td>
                                        <td><button class="btn btn-primary" id="AddToQueue"><span class="glyphicon glyphicon-edit"></span> 开始加工</button></td>
                                        <td><button class="btn btn-danger" id="FinishTask"><span class="glyphicon glyphicon-lock"></span> 结束加工</button></td>
                                        <td class="sinno" hidden><button class="btn btn-primary" id="OutSource1"><span class="glyphicon glyphicon-ok-circle"></span> 任务外发</button></td>
                                        <td class="sinno" hidden><button class="btn btn-warning" id="CancelOutSource"><span class="glyphicon glyphicon-ban-circle"></span> 取消外发</button></td>
                                    }
                                    break;
                                case 4://铣铁任务
                                    if (CkDepName.Equals("CNC"))
                                    {
                                        <td>
                                            <select class="form-control" id="Sel_priority">
                                                <option value="0">-</option>
                                                <option value="1">1</option>
                                                <option value="2">2</option>
                                                <option value="3">3</option>
                                                <option value="4">4</option>
                                                <option value="5">5</option>
                                            </select>
                                        </td>
                                        <td class="sinno" hidden><button class="btn btn-primary" id="AddToQueue"><span class="glyphicon glyphicon-edit"></span> 开始加工</button></td>
                                        <td><button class="btn btn-warning" id="PointCheck"><span class="glyphicon glyphicon-user"></span> 任务点检</button></td>
                                        <td><button class="btn btn-danger" id="FinishTask"><span class="glyphicon glyphicon-lock"></span> 结束加工</button></td>
                                        <td class="sinno" hidden><button class="btn btn-primary" id="OutSource1"><span class="glyphicon glyphicon-ok-circle"></span> 任务外发</button></td>
                                        <td class="sinno" hidden><button class="btn btn-warning" id="CancelOutSource"><span class="glyphicon glyphicon-ban-circle"></span> 取消外发</button></td>
                                    }
                                    break;
                                case 6:
                                    if (CkDepName.Equals("MG"))
                                    {
                                        <td>
                                            <select class="form-control" id="Sel_priority">
                                                <option value="0">-</option>
                                                <option value="1">1</option>
                                                <option value="2">2</option>
                                                <option value="3">3</option>
                                                <option value="4">4</option>
                                                <option value="5">5</option>
                                            </select>
                                        </td>
                                        <td><button class="btn btn-primary" id="AddToQueue"><span class="glyphicon glyphicon-edit"></span> 开始加工</button></td>
                                        <td><button class="btn btn-danger" id="FinishTask"><span class="glyphicon glyphicon-lock"></span> 结束加工</button></td>
                                        <td class="sinno" hidden><button class="btn btn-primary" id="OutSource1"><span class="glyphicon glyphicon-ok-circle"></span> 任务外发</button></td>
                                        <td class="sinno" hidden><button class="btn btn-warning" id="CancelOutSource"><span class="glyphicon glyphicon-ban-circle"></span> 取消外发</button></td>
                                    }
                                    break;
                            }
                            @*只有主管以上级别可以设置加工设备信息*@
                    if (CkDepName.Equals("CNC") && (type == 1 || type == 4))
                    {
                        <td><button class="btn btn-success" id="AddCNCTask"><span class="glyphicon glyphicon-plus"></span> 新建手工任务</button></td>
                    }
                    else if (CkDepName.Equals("EDM") && type == 2)
                    {
                        <td>
                            <a class="btn btn-success" href="/Task/AddEDMTask"><span class="glyphicon glyphicon-plus"></span> 新建手工任务</a>
                        </td>
                    }
                            if ((CkPosID >= 2) && (type == 1 || type == 4))
                            {
                                <td><button class="btn btn-default" id="MachineSetting"><span class="glyphicon glyphicon-th-list"></span> 设备管理</button></td>
                            }
                            if (CkDepName.Equals("EDM") && type == 2)
                            {
                                <td><button class="btn btn-default" id="EleInStock"><span class="glyphicon glyphicon-inbox"></span> 电极库存</button></td>
                            }
                        }

                    }
                    else
                    {
                        <td><input type="text" class="col-sm-1 form-control" id="TaskKeyword" placeholder="任务名关键字" /></td>
                        <td><button class="btn btn-info" id="QueryTask"><span class="glyphicon glyphicon-search"></span> 查询</button></td>
                    }
                    
                </tr>
            </table>
        </div>
        <div class="RightDiv_BottomDiv">
            <table id="TaskGrid"></table>
            <div id="jqGridPager"></div>
        </div>
        <div id="EleInfo_Div" class="EleInfoDiv">
        </div>
    </div>  
</div>

@*CNC删除备注输入对话框*@
<div class="modal" data-backdrop="static" data-keyboard="false" id="DeleteByCNC" tabindex="-1" role="dialog" aria-labelledby="DeleteByCNCLabel">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">x</button>
                <h4 class="modal-title" id="DeleteByCNCLabel">加工任务CNC删除</h4>
            </div>
            <div class="modal-body">
                <table>
                    <tr>
                        <td class="col-sm-2"><label>任务删除备注</label></td>
                    </tr>
                    <tr>

                        <td class="col-sm-6">
                            <textarea id="Memo" class="form-control col-sm-6" style="resize:none" rows="5"></textarea>
                            <input type="hidden" id="TaskIDs" />
                        </td>
                    </tr>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">返回</button>
                <button type="button" id="ConfirmDeleteTask" class="btn btn-primary">删除任务</button>
            </div>
        </div>
    </div>
</div>

@*EDM任务结束对话框*@
@if (ViewBag.TaskType == 2)
{
    <div class="modal" data-backdrop="static" data-keyboard="false" id="FinishEDMDialog" tabindex="-1" role="dialog" aria-labelledby="FinishEDMLabel">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">x</button>
                    <h4 class="modal-title" id="FinishEDMLabel">EDM任务结束</h4>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="EDMTaskID" />
                    <table>
                        <tr>
                            <td class="col-sm-4">
                                <div class="panel panel-default">
                                    <div class="panel-body inPageList" id="ELEList" style="height:200px;overflow: scroll;">
                                    </div>
                                </div>
                            </td>
                            <td class="col-sm-4">
                                <div class="panel panel-default">
                                    <div class="panel-body inPageList" id="ItemList" style="height:200px;overflow: scroll">
                                    </div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2">

                                <div class="col-sm-4">
                                    <label>下一部门</label>
                                    <select id="NextDepartment" class="form-control"></select>
                                </div>

                                <div class="col-sm-4">
                                    <label>备注</label>
                                    <select id="FinishMemo" class="form-control">
                                        <option>正常加工</option>
                                        <option>修烧焊</option>
                                        <option>返工</option>
                                        <option>改模</option>
                                    </select>
                                </div>

                                <div class="col-sm-4">
                                    <label>EDM操作人员</label>
                                    <select id="Operator" class="form-control"></select>
                                </div>
                            </td>

                        </tr>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">返回</button>
                    <button type="button" id="ConfirmFinishEDM" class="btn btn-primary">确定</button>
                </div>
            </div>
        </div>
    </div>
}
    @*右键菜单*@
    @if (ViewBag.State == 0)
    {
        <div class="contextMenu dropdown" id="MachineTaskContextMenu" style="display:none">
            <ul style="width:200px">
                @if (_wsDep.Contains(CkDeptID))
             {
                <li id="SetAccept">
                    <span class="ui-icon ui-icon-pencil" style="float:left"><img src="~/Images/EditProject.png" /></span>
                    <span style="font-size:12px; font-family:Verdana">设置收到标记</span>
                </li>
                <li id="PauseTask">
                    <span class="ui-icon ui-icon-pencil" style="float:left"><img src="~/Images/EditProject.png" /></span>
                    <span style="font-size:12px; font-family:Verdana">暂停/继续任务</span>
                </li>
             }
                @if (ViewBag.TaskType == 1)
             {
                 if (CkDepName.Equals("CNC"))
                 {
                @*<li id="EditCNCTask">
                        <span class="ui-icon ui-icon-pencil" style="float:left"><img src="~/Images/EditProject.png" /></span>
                        <span style="font-size:12px; font-family:Verdana">任务信息编辑</span>
                    </li>*@
                @*<li id="DeleteTask">
                        <span class="ui-icon ui-icon-pencil" style="float:left"><img src="~/Images/EditProject.png" /></span>
                        <span style="font-size:12px; font-family:Verdana">CNC删除</span>
                    </li>*@
                 }
             }
                @if (ViewBag.TaskType == 2)
             {
                 if (CkDepName.Equals("EDM"))
                 {
                <li id="SetWaiting">
                    <span class="ui-icon ui-icon-pencil" style="float:left"><img src="~/Images/EditProject.png" /></span>
                    <span style="font-size:12px; font-family:Verdana">设置为等待中</span>
                </li>
                @*<li id="CheckEleStatus">
                        <span class="ui-icon ui-icon-pencil" style="float:left"><img src="~/Images/Document.png" /></span>
                        <span style="font-size:12px; font-family:Verdana">电极状态</span>
                    </li>*@
                 }
             }
                @if (ViewBag.TaskType == 4)
             {
                 if (CkDepName.Equals("CNC"))
                 {
                @*<li id="DeleteTask">
                        <span class="ui-icon ui-icon-pencil" style="float:left"><img src="~/Images/EditProject.png" /></span>
                        <span style="font-size:12px; font-family:Verdana">CNC删除</span>
                    </li>*@
                 }
             }
            </ul>
        </div>
    }
    <input type="hidden" id="MoldNumber" value="@ViewBag.MoldNumber" />
    <script src="~/Scripts/jquery.ba-throttle-debounce.js"></script>

    <div class="modal fade" id="EleStateModal" tabindex="-1" role="dialog" aria-labelledby="EleStateModal-label">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="EleStateModal-label">电极状态</h4>
                </div>
                <div class="modal-body">
                    <select id="EleState" class="form-control" size="20"></select>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">返回</button>
                </div>
            </div>
        </div>
    </div>

    @*设置任务结束*@
    <div class="modal fade" id="SetupWFTaskHourModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document" style="width:980px;">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">设置任务结束</h4>
                </div>
                <div class="modal-body">
                    @*设置任务结束 右键菜单*@
                    <div class="contextMenu dropdown" id="SetupTHFinishContextMenu" style="display:inline;">
                        <ul style="width:200px;">
                            <li id="LockTaskHour">
                                <span class="ui-icon ui-icon-pencil" style="float:left"><img src="~/Images/EditProject.png" /></span>
                                <span style="font-size:12px; font-family:Verdana">锁定任务工时</span>
                            </li>
                        </ul>
                    </div>
                    <table id="tb_SetupWFTaskHour"></table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal" id="modal_btn_close_FinishTask">返回</button>
                    @*<button type="button" class="btn btn-primary" id="modal_btn_FinishTask"><span class="glyphicon glyphicon glyphicon-sign"></span> 结束任务</button>*@
                </div>
            </div>
        </div>
    </div>

    @*设置任务开始*@
    <div class="modal fade" id="SetTaskStartModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">设置任务开始</h4>
                </div>
                <div class="modal-body">
                    <table>
                        <tr>
                            <td><label>选择机器：</label></td>
                            <td>
                                <input id="modal_sel_machinesinfo" list="MInfoCodeDL" type="text" name="MInfoCode" class="form-control" style="width:180px;" />
                                <datalist id="MInfoCodeDL"></datalist>
                            </td>
                            <td><label>选择人员：</label></td>
                            <td><select id="CheckUser" class="form-control" style="width:100px;"></select></td>
                        </tr>
                    </table>
                    <table id="tb_TaskStart"></table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal"><span class="glyphicon glyphicon-remove-sign"></span> 返回</button>
                    <button type="button" id="modal_btn_StartTask" class="btn btn-primary"><span class="glyphicon glyphicon-save"></span> 提交</button>
                    <button type="button" id="modal_btn_wfTask" class="btn btn-primary" style="display:none;"><span class="glyphicon glyphicon-save"></span> 确认外发</button>
                </div>
            </div>
        </div>
    </div>

    @*设置任务阶段工时*@
    <div class="modal fade" id="SetupTaskPeriodHourModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">设置阶段工时</h4>
                </div>
                <div class="modal-body">
                    <table id="formTable_tph">
                        <tr>
                            <td><label>总工时：</label></td>
                            <td>
                                <input id="modalinput_TotalTime" type="number" readonly />
                                <input id="taskhourTbCurRowid" hidden/>
                            </td>
                        </tr>
                        <tr>
                            <td><label>未分配工时：</label></td>
                            <td><input id="modalinput_AssignedTime" type="number" readonly /></td>
                        </tr>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal" id="modal_btn_CloseWindowTPHour"><span class="glyphicon glyphicon glyphicon-off"></span>返回</button>
                    <button type="button" class="btn btn-primary" id="modal_btn_SubmitTPHour" disabled="disabled"><span class="glyphicon glyphicon glyphicon-save"></span>提交</button>
                </div>
            </div>
        </div>
    </div>

<script>
     $(document).ready(function () {
         $("#target").val("/Task/MachineTaskList?State=@ViewBag.State&TaskType=@ViewBag.TaskType&MoldNumber=")

         $("#Keyword").on("keyup", function(){
             $.debounce(100,LoadMoldList(0, @ViewBag.State, @ViewBag.TaskType, $("#Keyword").val()))
             //delay_till_last("MachineTask", LoadMoldList(0, @ViewBag.State, @ViewBag.TaskType, $("#Keyword").val()), 500);
         })

         LoadMoldList(0, @ViewBag.State, @ViewBag.TaskType, "", "@ViewBag.MoldNumber");

         //Create the task grid
         //任务信息表格初始化
         TaskList("@ViewBag.MoldNumber", @ViewBag.TaskType, @ViewBag.State);
         //任务开始表格初始化
         TaskStartGrid('');
         //外发任务结束表格初始化
         WFTaskFinishGrid('');
         //Hide the not wanted columns
         //$("#TaskGrid").setGridParam().showHideCol("StateMemo");
         $("#TaskGrid").setGridParam().showHideCol("State");
         $("#TaskGrid").setGridParam().showHideCol("CreateTime");
         $("#TaskGrid").setGridParam().showHideCol("PlanTime");
         $("#TaskGrid").setGridParam().showHideCol("AcceptTime");
         $("#TaskGrid").setGridParam().showHideCol("StartTime");
         //$("#TaskGrid").setGridWidth(document.body.clientWidth * 0.8);
         switch(@ViewBag.TaskType){
                case 1:
                    TaskListCNC()
                    break;
                case 2:
                    TaskListEDM()
                    break;
                case 3:
                    TaskListWEDM();
                    break;
                case 4:
                    TaskListMill();
                    break;
                case 6:
                    TaskListGrind();
            }
         //TODO: 加工(历史)界面显示隐藏列
         if (@ViewBag.State==1){
             $("#TaskGrid").setGridParam().showHideCol("StateMemo");
             $("#TaskGrid").setGridParam().showHideCol("ActualTime");
             $("#TaskGrid").setGridParam().showHideCol("Operater");
             $("#TaskGrid").setGridParam().showHideCol("Machine");
             $("#TaskGrid").setGridParam().showHideCol("FinishTime");
             if ((@ViewBag.TaskType==1)){
                    $("#TaskGrid").setGridParam().showHideCol("Surface");
                    $("#TaskGrid").setGridParam().showHideCol("Obit");
                    $("#TaskGrid").setGridParam().showHideCol("ELEPos");
                }
             else if(@ViewBag.TaskType==3){
                    $("#TaskGrid").setGridParam().showHideCol("Preciston");
                    $("#TaskGrid").setGridParam().showHideCol("CADPartName");
                }
             else if(@ViewBag.TaskType==6){
                    $("#TaskGrid").setGridParam().showHideCol("CADPartName");
                }
         }
         //当前
         else{
             $("#TaskGrid").setGridParam().showHideCol("Time");
             $("#TaskGrid").setGridParam().showHideCol("Priority");
         }

         //$("#TaskGrid").setGridWidth(document.body.clientWidth * 0.8);

         $("#SelMold").on("click", function(){
             ShowMoldSelect();
         })

         ///Task/MachineTaskList?TaskType=1&MoldNumber=&State=0
         $("#MoldSelect").on("change", function(){
             @*location.href="/Task/MachineTaskList?TaskType=@ViewBag.TaskType&MoldNumber="+$("#MoldSelect option:selected").val()+"&State=@ViewBag.State";*@
             if ($("#MoldSelect").val()!=null){
                 $("#FMoldNumber").val($("#MoldSelect").val());
                 RefreshTaskGrid("");
                 var _links = $(".TaskTypeLink")

                 for (i=0;i<_links.length;i++){
                     _links[i].href=AttachMoldNumber(_links[i].href, $("#MoldSelect").val());
                 }
             }
         })

         $("#CheckEleStatus").on('click', function(){
             ShowEleStatus();
         })

         //设置加工开始
         $('#modal_btn_StartTask').on('click',function(){

                var itemData='';
                itemData=compactTSObj(1,'_setupTS');
                if(itemData==''){
                    return false;
                }
                $.ajax({
                    url: "/Task/Service_StartTask",
                    data:itemData,
                    type:'post',
                    dataType: "html",
                    success: function (msg) {
                        if (msg == "") {
                            $('#SetTaskStartModal').modal('hide');
                            alert("加工任务开始");
                            RefreshTaskGrid("");
                        } else {
                            alert(msg);
                        }
                    }
                })
         })
         //选择人员
         $('#CheckUser').on('change',function(){
             var _userid=$('#CheckUser option:selected').val();
             var _username = $('#CheckUser option:selected').text();

             var selrows = $("#tb_TaskStart").jqGrid('getGridParam', 'selarrrow');
             if (selrows.length==0){
                 selrows=  $('#tb_TaskStart').getDataIDs();
             }
             for (i=0;i<selrows.length;i++){
                 $("#tb_TaskStart").setCell(selrows[i], "UserName", _username);
                 $("#tb_TaskStart").setCell(selrows[i], "UserID", _userid);
             }
         })
         //选择加工开始机器
         $('#modal_sel_machinesinfo').on('change',function(){
                var val = $('#modal_sel_machinesinfo').val();
                val = val.split(',');

                var selrows = $("#tb_TaskStart").jqGrid('getGridParam', 'selarrrow');
                if (selrows.length==0){
                    selrows=  $('#tb_TaskStart').getDataIDs();
                }
                var mInfocode=val[1];
                var mInfoname=val[0];
                for (i=0;i<selrows.length;i++){
                    $("#tb_TaskStart").setCell(selrows[i], "MachinesName", mInfoname);
                    $("#tb_TaskStart").setCell(selrows[i], "MachinesCode", mInfocode);
                }
         })
         //设置加工结束
         $("#FinishTask").on("click", function () {
             //var selr = $('#TaskGrid').jqGrid('getGridParam', 'selarrrow');
             //var _ids = "";//正在加工 任务
             //var _wfids='';//外发 任务
             //var _ycids='';//其它状态 任务
             //for (var i = 0; i < selr.length; i++) {
             //    var _state=$("#TaskGrid").getCell(selr[i], 'State');
             //    if(_state=='正在加工'){
             //        _ids=addColumnlists(_ids,'TaskGrid',selr[i],'ID');
             //    }
             //    else if(_state=='外发'){
             //        _wfids=addColumnlists(_wfids,'TaskGrid',selr[i],'ID');
             //    }
             //    else{
             //        _ycids=addColumnlists(_ycids,'TaskGrid',selr[i],'TaskName');
             //    }
             //}
             //if(_ycids==''){
             var _jgIDs=GetMultiSelectedIDs('TaskGrid');
             if(_jgIDs==''){
                 alert('请选择需要结束的任务！');
             }
             else{
                 $('#tb_SetupWFTaskHour').jqGrid("clearGridData");
                 $("#tb_SetupWFTaskHour").setGridParam().showHideCol("MachinesName");
                 $('#SetupWFTaskHourModal').modal('show');
                 var _url = '/Task/Service_Json_GetTaskByIDs?TaskIDs=' + _jgIDs + '&type=' + 2;
                 $("#tb_SetupWFTaskHour").jqGrid('setGridParam', { datatype: 'json', url: _url }).trigger("reloadGrid");
             }
             ////正常加工任务结束
             //if(_ids!=''&& _wfids=='')
             //    FinishTask(_ids);
             ////外发任务结束
             //if(_wfids!=''){
             //    //正常任务结束
             //    if(_ids!='')
             //        $.get("/Task/SetTaskFinish?TaskIDs=" + _ids);
             //    //外发任务列表
             //    //clear table data
             //    $('#tb_SetupWFTaskHour').jqGrid("clearGridData");
             //    $('#SetupWFTaskHourModal').modal('show');
             //    var _url = '/Task/Service_Json_GetTaskByIDs?TaskIDs=' + _wfids + '&type=' + 2;
             //    $("#tb_SetupWFTaskHour").jqGrid('setGridParam', { datatype: 'json', url: _url }).trigger("reloadGrid");
             //}
             //}
             //else
             //    alert('以下任务['+_ycids+']尚未开始加工，不允许结束！');
         })
         //结束任务
         $('#modal_btn_FinishTask').on('click',function(){
             ////获取第2行(除表头)第2个单元格(第一个默认隐藏)
             //var firsttdobj= $('#tb_SetupWFTaskHour td:eq(8)');
             ////模拟单元格点击事件
             //firsttdobj.trigger("click");

             //var _rows = $('#tb_SetupWFTaskHour').jqGrid('getRowData');
             //var msg='';
             //var _taskids=GetAllValues('tb_SetupWFTaskHour','ID');
             //for(var i=0;i<_rows.length;i++){
             //    var _taskid=_rows[i].ID;
             //    var _tasktime=_rows[i].TotalTime;
             //    if(_taskid>0){
             //        $.get('/Task/SetWFTaskFinish?TaskID='+_taskid+'&Time='+_tasktime,function(res){
             //            if (res != "") {
             //                msg=msg+res+';';
             //            }
             //        })
             //    }
             //}
             //if(msg==''){
             //    location.reload();
             //    $('#SetupWFTaskHourModal').modal('hide');
             //}
             //else{
             //    //重载表格
             //    var _url = '/Task/Service_Json_GetTaskByIDs?TaskIDs=' + _taskids + '&type=' + 2;
             //    $("#tb_SetupWFTaskHour").jqGrid('setGridParam', { datatype: 'json', url: _url }).trigger("reloadGrid");
             //    alert(msg+'——任务结束失败！');
             //}
             if (confirm("确认结束任务？")) {
                 var itemData=compactTSObj(2,'_viewmodel');
                 if(itemData!='' && itemData!=undefined){
                     $.get('/Task/SetWFTaskFinish',itemData,function(res){
                         if(res==''){
                             alert('结束成功！');
                             $('#SetupWFTaskHourModal').modal('hide');
                             location.reload();
                         }
                         else{
                             alert('任务:'+res+'没有正常结束！');
                         }
                     })
                 }
             }
         })

         $("#SetTaskStartModal").on("shown.bs.modal", function () {
             LoadWSUser($('#FTaskType').val());
             //LoadMInfoList($('#FTaskType').val());
         })
         //确认外发
         $('#modal_btn_wfTask').on('click',function(){
             var _itemData='';
             _itemData=compactTSObj(1,'_viewmodel');
             if(_itemData=='')
                 return false;
             //_itemData=JSON.parse(_itemData);
             var _ids = GetAllValues("tb_TaskStart","ID");
             Outsource(_ids,_itemData);
         })

         $("#SetupTaskPeriodHourModal").on("shown.bs.modal", function (){
             var TotalTime = $("#tb_SetupWFTaskHour").getCell($("#tb_SetupWFTaskHour").getGridParam("selrow"), "TotalTime");
             $('#modalinput_TotalTime').val(TotalTime);
             $('#modalinput_AssignedTime').val(TotalTime);
             $('.tr_TPHType').empty();
             $.get('/Task/Service_Json_GetTaskPeriodType',function(res){
                 for(var i=0;i<res.length;i++){
                     var html='<tr class="tr_TPHType"><td><label>'+res[i].Name+'('+res[i].Code+')'+'：</label></td><td><input id="'+res[i].Code+'" type="number" value="0" class="input_TPHType"/></td></tr>';
                     $('#formTable_tph').append(html)
                 }
             })
         })
         //绑定blur事件 父级绑定
         $('#formTable_tph').on('blur','input',function(){
             var _totaltime=Number($('#modalinput_TotalTime').val());
             var _curtime=0;
             var _inputtime=0;
             $(".input_TPHType").each(function(){
                 _inputtime+=Number($(this).val());
             });
             _curtime=Math.round(_totaltime-_inputtime,2);
             if($(this).val()<0){
                 alert("无效输入！");
                 $(this).val(0);
                 $(this).focus();
                 return;
             }
             if(_curtime<0){
                 alert('录入工时大于剩余可分配工时，请重新录入！');
                 $(this).val(0);
                 $(this).focus();
                 return;
             }
             else if(_curtime>0){
                 document.getElementById("modal_btn_SubmitTPHour").disabled=true;
             }
             else if(_curtime==0){
                 document.getElementById("modal_btn_SubmitTPHour").disabled=false;
             }
             $('#modalinput_AssignedTime').val(_curtime);
         })
         //
         //$('#formTable_tph').on('change','#modalinput_AssignedTime',function(){
         //    var _time=$('#modalinput_AssignedTime').val();
         //    alert(_time);
         //    if(_time==0)
         //        document.getElementById("modal_btn_SubmitTPHour").disabled=true;
         //    else
         //        document.getElementById("modal_btn_SubmitTPHour").disabled=false;
         //})

         //工时提交
         $('#modal_btn_SubmitTPHour').on('click',function(){
             var _time=$('#modalinput_AssignedTime').val();
             if(_time>0){
                 alert('存在未分配工时，禁止提交！');
                 return;
             }
             else{
                 //提交总工时
                 var row=$("#tb_SetupWFTaskHour").getGridParam("selrow");
                 var rowData= $("#tb_SetupWFTaskHour").jqGrid('getRowData',row);
                 
                 //检查A0时间
                 var chkres='';
                 $(".input_TPHType").each(function(){
                     var code= this.id;
                     //var model={TaskHourID:res,TypeCode:code,Time:Number($(this).val())};
                     $.ajaxSettings.async=false;
                     $.get('/Task/Service_MacTHPeriod_ChkATime?TypeCode='+code+'&Time='+$(this).val()+'&taskhourID='+rowData.TaskHourID,function(msg){
                         chkres=chkres+msg+'\n';
                     },'html');
                 });
                 if(chkres.trim()==''){
                     var i=0;
                     var name='_viewmodel';
                     var itemData=name+'['+i+'].TaskID='+rowData.ID+'&'+
                                   //name+'['+i+'].TaskName='+rowData.TaskName+'&'+
                                   name+'['+i+'].State='+rowData.State+'&'+
                                   name+'['+i+'].MachinesCode='+rowData.MachinesCode+'&'+
                                   name+'['+i+'].MachinesName='+rowData.MachinesName+'&' +
                                   name+'['+i+'].UserID='+rowData.UserID+'&' +
                                   name+'['+i+'].UserName='+rowData.UserName+'&' +
                                   name+'['+i+'].TotalTime='+rowData.TotalTime+'&' +
                                   name+'['+i+'].Qty='+rowData.Qty+'&'+

                                   name+'['+i+'].StartTime='+rowData.StartTime+'&'+
                                   name+'['+i+'].FinishTime='+rowData.FinishTime+'&'+
                                   name+'['+i+'].SemiTaskFlag='+rowData.SemiTaskFlag+'&'+
                                   name+'['+i+'].TaskHourID='+ rowData.TaskHourID;
                     $.ajaxSettings.async=false;
                     $.get('/Task/SetWFTaskFinish',itemData,function(res){
                         res=Number(res);
                         if(res>0){
                             //提交阶段工时
                             $(".input_TPHType").each(function(){
                                 var code= this.id;
                                 var model={TaskHourID:res,TypeCode:code,Time:Number($(this).val())};
                                 $.ajaxSettings.async=false;
                                 $.get('/Task/Service_Save_TPRecords',model);
                             });
                             //保存人工工时
                             $.get('/Task/Service_EmpWH_SaveRecordByMachTH?taskhourID='+res);
                             //删除行
                             //var _rowid=$('#taskhourTbCurRowid').val();
                             $("#tb_SetupWFTaskHour").jqGrid("delRowData", row);
                             $('#SetupTaskPeriodHourModal').modal('hide');
                         }
                         else{
                             alert('任务工时结束失败！');
                         }
                     });
                 }else{
                     alert(chkres);
                 }
             }
         });

         //结束任务重载表格
         $('#modal_btn_close_FinishTask').on('click',function(){
             location.reload();
         })

         $("#OutSource1").on("click", function () {
             var _ids = GetMultiSelectedIDs("TaskGrid");
             if (_ids == "") {
                 alert("请选择至少一个任务");
                 return;
             } else {
                 //if (confirm("外发选中任务？")) {
                 //    var _ids = GetMultiSelectedIDs("TaskGrid");
                 //    //Outsource(_ids);
                 //}
                 var _ids = GetMultiSelectedIDs("TaskGrid");
                 SetupTaskStart('true')
             }
         });
     })

    function addColumnlists(ids,GridTableName,row,ColName){
        if (ids == "") {
            ids = $("#" + GridTableName).getCell(row, ColName);
        } else {
            ids = ids + "," + $("#" + GridTableName).getCell(row, ColName);
        }
        return ids;
    }

     function AttachMoldNumber(Link, MoldNumber){
         var _link = Link.substring(0, Link.lastIndexOf('=')+1)+MoldNumber;
         return _link;
     }

     function RefreshTaskGrid(Keyword){
         var _MoldNumber = $("#FMoldNumber").val();
         var _TaskType = $("#FTaskType").val();
         var _State = $("#FState").val();
         if (Keyword==""){
             $("#Keyword").val("");
         }
         var _url = '/Task/JsonMachineTasks?MoldNumber=' + _MoldNumber + "&TaskType=" + _TaskType + "&State=" + _State+"&Keyword="+Keyword;
         $("#TaskGrid").jqGrid('setGridParam', { datatype: 'json', url: _url }).trigger("reloadGrid");
     }
     function ChangeTaskType(TaskType){
         $("#FTaskType").val(TaskType);
         RefreshTaskGrid();
     }

     function ChangeViewState(State){
         $("#FState").val(State);
         RefreshTaskGrid();
     }

     function ShowEleStatus() {
         var _taskID = GetCurrentID("TaskGrid");
         if (_taskID != "") {
             $("#EleState option").remove();
             var _url = "/Task/EleStateCheck?TaskID="+_taskID;
             $.getJSON(_url, function(msg){
                 $.each(msg, function(i, n){
                     $("#EleState").append($("<option/>", {text:n}))
                 })
             })
             $("#EleStateModal").modal("show");
         } else {
             alert("请选择一个任务");
         }
     }

     function chk_griddata_TaskStart(){
         //var rowData = $("#tb_TaskStart").jqGrid("getRowData");
         //for(var i=0;i<rowData.length;i++){
         //    if (rowData[i].TotalTime == "" || rowData[i].TotalTime==0) {

         //        alert('工时未输入！');
         //        return false;
         //    }
         //    if (rowData[i].MachinesCode == "" || rowData[i].MachinesCode==undefined) {

         //        alert('未选择机器！');
         //        return false;
         //    }
         //}
         //return true;
     }

    //type 1 开始加工 2 结束加工
     function compactTSObj(type,name){
         var _tbname;
         if(type==1){
             _tbname= 'tb_TaskStart';
         }
         else{
             _tbname= 'tb_SetupWFTaskHour';
         }
         //获取第2行(除表头)第2个单元格(第一个默认隐藏)
         var firsttdobj= $('#'+_tbname+' td:eq(13)');
         //模拟单元格点击事件
         firsttdobj.trigger("click");
         var data;
         var itemData='';
         data= $('#'+_tbname).jqGrid('getRowData');
         for(var i=0;i<data.length;i++){
             var rowData =data[i];
             if(type==1){
                 if(rowData.MachinesCode==''||rowData.MachinesCode==undefined){
                     alert('请选择机器！');
                     return '';
                 }
                 else if(rowData.UserName==''||rowData.UserName==undefined){
                     alert('请选择人员！');
                     return '';
                 }
                 else if(rowData.Qty==''||rowData.Qty==0){
                     alert('请填写加工零件数量！');
                     return '';
                 }
             }
             else if(type==2){
                 if((rowData.TotalTime==0||rowData.TotalTime==undefined)&& rowData.State=='外发'){
                     alert('外发任务请填写工时！');
                     return '';
                 }
             }
             itemData=itemData+name+'['+i+'].TaskID='+rowData.ID+'&'+
                               //name+'['+i+'].TaskName='+rowData.TaskName+'&'+
                               name+'['+i+'].State='+rowData.State+'&'+
                               name+'['+i+'].MachinesCode='+rowData.MachinesCode+'&'+
                               name+'['+i+'].MachinesName='+rowData.MachinesName+'&' +
                               name+'['+i+'].UserID='+rowData.UserID+'&' +
                               name+'['+i+'].UserName='+rowData.UserName+'&' +
             name+'['+i+'].TotalTime='+rowData.TotalTime+'&' +
             name+'['+i+'].Qty='+rowData.Qty+'&'
         }
         //去掉最后一个字符
         itemData=itemData.substring(0,itemData.length-1);
         return itemData;
     }
</script>
<script>
        $(document).ready(function(){
            $('#sel_TaskType').on('change',function(){
                location.href='/Task/MachineTaskList?TaskType='+$('#sel_TaskType').val()+'&State='+'@ViewBag.State'+'&MoldNumber='+'@ViewBag.MoldNumber';
            });

            $('#sel_TaskStatus').on('change',function(){
                location.href='/Task/MachineTaskList?TaskType='+'@ViewBag.TaskType'+'&State='+$('#sel_TaskStatus').val()+'&MoldNumber='+'@ViewBag.MoldNumber';
            });
        })
</script>
<script>
    $(document).ready(function(){
        if(@ViewBag.TaskType==2){
            $('#EleInfo_Div').show();
        }else{
            $('#EleInfo_Div').hide();
        }
        $(window).resize(function(){
            if(@ViewBag.TaskType==2){
                $("#TaskGrid").setGridWidth($('.RightDiv_BottomDiv').eq(0).width()-370);
            }else{
                $("#TaskGrid").setGridWidth($('.RightDiv_BottomDiv').eq(0).width());
            }
            $("#TaskGrid").setGridHeight($('.RightDiv_BottomDiv').eq(0).height()-40);
        });
        //设置优先级
        $("#Sel_priority").on("change", function () {
            SetPriority(GetMultiSelectedIDs("TaskGrid"), this.value);
        });
    })

    function GetEleInfo(taskID){
        $('#EleInfo_Div').empty();
        var html='';
        var _eleInfoDivWidth=$('.EleInfoDiv').width();
        $.ajaxSettings.async=false;
        $.get('/Task/Service_EDM_GetMachObj?edmTaskID='+taskID,function(res){
            var cadDetail=res.split(';');
            html=html+'<table class="EleObjTB" style="width:'+_eleInfoDivWidth+'"><colgroup><col width="'+_eleInfoDivWidth+'"/></colgroup><tr class="EleObjTB_Header tbHeader"><td>加工对象</td></tr>';
            for(var i=0;i<cadDetail.length;i++){
                html=html+'<tr class="EleObjTB_Body"><td>'+cadDetail[i]+'</td></tr>';
            }
        },'html');
        html=html+'</table>';
        $.get('/Task/Service_Ele_GetItemInfo?edmTaskID='+taskID,function(res){
            html=html+'<table class="EleInfoTB" style="width:'+_eleInfoDivWidth+'"><colgroup><col width="130"/><col width="160" /><col width="70" /></colgroup><tr class="EleInfoTb_Header tbHeader"><td>电极任务</td><td>标签名称</td><td>状态</td></tr>';
            for(var i=0;i<res.length;i++){               
                if(res[i].CncItemID==0){
                    html=html+'<tr class="EleInfoTB_Body_1"><td hidden></td><td>'+res[i].TaskName+'</td><td></td><td>-</td></tr>';//'+res[i].Status+'
                }else{
                    html=html+'<tr class="EleInfoTB_Body"><td hidden>'+res[i].CncItemID+'</td><td></td><td>'+res[i].CncItemName+'</td><td>'+res[i].Status+'</td></tr>';
                }
            }
            html=html+'</table>';
            $('#EleInfo_Div').append(html);
            $('.EleInfoTB_Body_1').find('td').css('background-color',sessionStorage['trClickedColor']);
        })
    }
</script>
@{
    int _task = ViewBag.TaskType;
    switch (_task)
    {
        case 1:
            Html.RenderAction("CncTaskDialog");
            Html.RenderAction("ScanBarCodeDialog");
            break;
        case 2:
            Html.RenderAction("EdmTaskDialog");
            Html.RenderAction("ELECompensationDialog");
            break;
        case 3:
            Html.RenderAction("WedmTaskDialog");
            break;
        case 4:
            Html.RenderAction("MillingTaskDialog");
            Html.RenderAction("SteelProgramSelect");
            break;
    }
}