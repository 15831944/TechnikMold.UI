@using MoldManager.WebUI.Models.Helpers;
@{
    if(ViewBag.TaskType == 1)
    {
        ViewBag.Title = "电极任务点检";
    }
    else
    {
        ViewBag.Title = "铣铁任务点检";
    }

}
@{
    TaskTypeModelHelper _taskType = new TaskTypeModelHelper();
    int DeptID = 0;
    try
    {
        DeptID = Convert.ToInt32(Request.Cookies["User"]["Department"]);
    }
    catch
    {

    }
}
<h2 style="margin-top:60px;">@ViewBag.Title</h2>
<div class="UD_FatherDiv">
    <div class="UD_ToolBarDiv">
        <table>
            <tr>
                <td>
                    <button class="dropdown-toggle btn btn-default" data-toggle="dropdown" href="#">
                        选择任务类型
                        <b class="caret"></b>
                    </button>
                    <ul class="dropdown-menu">
                        @for (int i = 1; i < 5; i++)
                        {
                            //暂时禁用WEDM
                            if ((i != 2) && (i != 3))
                            {
                                <li role="presentation"><a href="/Task/TaskFinishList?TaskType=@i">@_taskType.GetTypeName(i)</a></li>
                            }
                        }
                    </ul>
                </td>
                <td>
                    @{
                        if (ViewBag.TaskType == 1)
                        {
                            <button class="btn btn-warning PointCheck" id="ElePointCheck"><span class="glyphicon glyphicon-barcode"></span> 点检</button>
                        }
                        else if (ViewBag.TaskType == 4)
                        {
                            <button class="btn btn-warning PointCheck" id="SteelPointCheck"><span class="glyphicon glyphicon-lock"></span> 点检</button>
                        }
                    }
                </td>
            </tr>
        </table>
    </div>
    <div class="UD_TableDiv">
        <table id="TaskGrid"></table>
        <div id="jqGridPager"></div>
    </div>

</div>

@if (ViewBag.TaskType == 1)
{
    @*电极扫描对话框*@
    <div class="modal" data-backdrop="static" data-keyboard="false" id="SpotCheckDlg" tabindex="-1" role="dialog" aria-labelledby="SpotCheckLabel">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">x</button>
                    <h4 class="modal-title" id="SpotCheckLabel">电极点检</h4>
                </div>
                <div class="modal-body">
                    <table>
                        <tr>
                            <td class="col-sm-2"><label>电极标签</label></td>
                            <td class="col-sm-6">
                                <input type="text" id="BarCode" class="form-control required" name="BarCode" />
                            </td>
                        </tr>
                        <tr>
                            <td class="col-sm-2"><label>点检人</label></td>
                            <td class="col-sm-6">
                                <select id="CheckUser" class="form-control"></select>
                            </td>
                        </tr>
                    </table>

                    <table class="col-sm-12 table-striped" style="margin-top:60px">
                        <thead>
                            <tr>
                                <td class="col-sm-1"></td>
                                <td class="col-sm-12"><label>待点检电极名</label></td>
                            </tr>
                        </thead>
                        <tbody id="Ele_List_D"></tbody>
                    </table>


                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">返回</button>
                    <button type="button" id="SpotCheckBtn" class="btn btn-primary"><span class="glyphicon glyphicon-check"></span> 确认</button>
                </div>
            </div>
        </div>
    </div>
}
else if (ViewBag.TaskType == 4)
{
    <div class="modal" data-backdrop="static" data-keyboard="false" id="SpotCheckDlg" tabindex="-1" role="dialog" aria-labelledby="SpotCheckLabel">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">x</button>
                    <h4 class="modal-title" id="SpotCheckLabel">电极点检</h4>
                </div>
                <div class="modal-body">
                    <table>
                        <tr>
                            <td class="col-sm-2"><label>点检人</label></td>
                            <td class="col-sm-6">
                                <select id="CheckUser" class="form-control"></select>
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">返回</button>
                    <button type="button" id="SpotCheckBtn" class="btn btn-primary"><span class="glyphicon glyphicon-check"></span> 确认</button>
                </div>
            </div>
        </div>
    </div>
}


<script src="~/Scripts/Task.js"></script>
<script>
    TaskFinish(@ViewBag.TaskType);

    var LabelNames = new Array();
    var ItemIDs = new Array();
    var _timer = {};
    $("document").ready(function () {

        $(window).resize(function () {
            $("#TaskGrid").setGridWidth($('.UD_TableDiv').eq(0).width());
            $("#TaskGrid").setGridHeight($('.UD_TableDiv').eq(0).height() - 40);
        });
        //点检
        $(".PointCheck").on("click", function () {
            @if (ViewBag.TaskType == 1)
            {
                @:LoadCNCItems();
                        }
            else if (ViewBag.TaskType == 4)
            {
                @:$("#SpotCheckDlg").modal("show");
                        }
        })

        $("#SpotCheckDlg").on("shown.bs.modal", function () {
            LoadCNCUser();
            $('#BarCode').val('');
            $('#Ele_List_D').empty();
            $('#BarCode').focus();
        })

        $("#BarCode").on("keyup", function () {
            delay_till_last('Position', function () {
                // run something
                var _barcode = $("#BarCode").val();
                var _findexof = _barcode.indexOf('*');
                var _lindexof = _barcode.lastIndexOf('*');
                if (_findexof == 0 && _lindexof == _barcode.length-1) {
                    ScanConfirm($("#BarCode").val());
                }               
            }, 500);
        })

        $("#SpotCheckBtn").on("click", function () {
            @if (ViewBag.TaskType == 1)
            {
                @:EleSpotCheck();
                        }
            else if (ViewBag.TaskType==4)
            {
                @:SteelSpotCheck();
                        }

        })


    });

    function LoadCNCUser() {
        $("#CheckUser option").remove();
        $.getJSON("/User/GetUsersByDepartment?DepartmentName=CNC", function (msg) {
            $.each(msg, function (i, n) {
                $("#CheckUser").append($("<option/>", {
                    value: n.UserID,
                    text: n.FullName
                }))
            })
        })
    }


    function LoadCNCItems() {
        var Labels = GetMultiSelectedCell("TaskGrid", "TaskName");
        var _itemIDs = GetMultiSelectedCell("TaskGrid", "ID");

        $("#SpotCheckDlg").modal("show");
    }

    function ScanConfirm(barcode) {
        var _url = "/Task/ValidateCNCItem?ELE_IndexCode=" + barcode
        $.getJSON(_url, function (msg) {
            if (Number(msg.CNCItemID) > 0) {
                if (msg.Status == 10) {
                    //var d = $('#1')[0];
                    var _id=msg.CNCItemID + "_EleLabel";
                    if ($("#" + _id).length == 0) {
                        $("#Ele_List_D").append("<tr><td><input class='itemid' type='checkbox' id='" + _id + "' checked disabled></td><td>" + msg.LabelName + "</td></tr>");
                    }
                    else {
                        alert("电极已存在");
                    }

                }
                else if (msg.Status == 20) {
                    alert("电极已点检完成,无需再次点检")
                }
                else {
                    alert("只有状态是 正在加工 的电极才可以点检！")
                }
            }
            else {
                alert("未找到对应电极信息");
            }
            $("#BarCode").val('');
        })


    }

    function EleSpotCheck() {
        var _items = $(".itemid:checked");
        var _itemIDs = "";
        for (i = 0; i < _items.length; i++) {
            var _id = _items[i].id;
            _id = _id.substring(0, _id.indexOf('_'));
            _itemIDs = _itemIDs == "" ? _id : _itemIDs + "," + _id;
        }
        var _url = "/Task/ElectrodeFinish?CNCItemIDs=" + _itemIDs + "&UserID=" + $("#CheckUser option:selected").val();
        $.ajax({
            url: _url,
            dataType: "html",
            type: "GET",
            success: function (msg) {
                if (msg == "") {
                    alert("电极点检完成");
                    location.reload();
                } else {
                    alert("以下电极点检失败,请重试:\r\n" + msg);
                }
            }
        })
    }

    function SteelSpotCheck() {
        var _items = GetMultiSelectedIDs("TaskGrid");
        if (_items != "") {
            var _url = "/Task/SteelFinish?TaskIDs=" + _items + "&UserID=" + $("#CheckUser option:selected").val();

            $.ajax({
                url: _url,
                dataType: "html",
                type: "GET",
                success: function (msg) {
                    if (msg == "") {
                        alert("铁件点检完成");
                        location.reload();
                    } else {
                        alert("以下铁件点检失败,请重试:\r\n" + msg);
                    }
                }
            })
        } else {
            alert("请选择要点检的电极");
        }

    }

    function delay_till_last(id, fn, wait) {
        if (_timer[id]) {
            window.clearTimeout(_timer[id]);
            delete _timer[id];
        }
        return _timer[id] = window.setTimeout(function () {
            fn();
            delete _timer[id];
        }, wait);
    }

</script>
